---
import productService from "../../components/db/productService";
import Layout from "../../components/layout/Layout.astro";
import { MAIN_URL } from "../../constants/info";
import type { TJsonLd } from "../../types/TJsonLd";

export async function getStaticPaths() {
    return productService.getStaticPaths();
}


const { product } = Astro.props;

const jsonLd:TJsonLd = {
  "@context": "https://schema.org",
  "@type": "Product",
  name: product.title,
  image: `${MAIN_URL}${product.imgSrc}`,
  description: product.description,
  brand: {
    "@type": "Brand",
    "name": "Tu Marca",
  },
  offers: product.linkCompras?.map((link) => ({
    "@type": "Offer",
    url: link.url,
    availability: "https://schema.org/InStock",
    priceCurrency: "MXN",
    // si no tienes precios en el JSON, puedes dejar esto vacío o quitarlo
    // price: "150"
  })),
};
---

<Layout title={product.title} jsonLd={jsonLd}>
  <section class="product-page">
    <div class="product-image-container">
      <img src={product.imgSrc} alt={product.altText} />
    </div>
    <div class="product-info-container">
      <h2 class="product-title">{product.title}</h2>
      <p class="product-description">{product.description}</p>

      {
        product.linkCompras && product.linkCompras.length > 0 && (
          <div class="purchase-section">
            <h3 class="purchase-title">Pidelo en:</h3>
            <div class="purchase-links">
              {product.linkCompras.map((link) => (
                <a
                  href={link.url}
                  class="purchase-btn"
                  target="_blank"
                  rel="noopener noreferrer"
                >
                  {link.shop === "mercado-libre"
                    ? "Mercado Libre"
                    : link.shop}
                </a>
              ))}
            </div>
          </div>
        )
      }
    </div>
  </section>
</Layout>

<style></style>
<style>
  .product-page {
    display: flex;
    grid-template-columns: 1fr;
    gap: 2rem;
    max-width: 1100px;
    margin: 4rem auto;
    padding: 4rem 2rem;
  }
  @media (min-width: 768px) {
    .product-page {
      grid-template-columns: 1fr 1.2fr;
      align-items: start;
    }
  }
  .product-image-container {
    flex: 2;
  }
  .product-image-container img {
    width: 100%;
    max-width: 450px;
    padding: 0 2.5rem;
    border-radius: 0.5rem;
    margin: 0 auto;
    display: block;
    filter: drop-shadow(5px 5px 10px rgba(0, 0, 0, 0.5));
  }
  .product-title {
    font-size: 2.5rem;
    color: var(--title);
    margin-bottom: 1rem;
  }
  .product-description {
    font-size: 1.1rem;
    line-height: 1.6;
    color: var(--text);
    margin-bottom: 2rem;
  }
  .purchase-title {
    font-size: 1.25rem;
    color: var(--title);
    margin-bottom: 1rem;
    padding-top: 1.5rem;
  }
  .purchase-links {
    display: flex;
    gap: 1rem;
  }
  .purchase-btn {
    display: inline-block;
    background-color: var(--tiffany-blue);
    color: white;
    padding: 0.75rem 1.5rem;
    border-radius: 0.375rem;
    text-decoration: none;
    font-weight: 600;
    transition: background-color 0.2s ease;
  }
  .purchase-btn:hover {
    background-color: #08a79d; /* Un tono más oscuro de tiffany-blue */
  }
  .product-info-container {
    flex: 3;
  }
</style>
