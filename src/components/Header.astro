---
type TLink = {
  name: string;
  url: string;
};
const links: TLink[] = [
  { name: "Home", url: "/" },
  { name: "Nosotros", url: "/nosotros" },
  { name: "Productos", url: "/productos" },
  { name: "Contacto", url: "/contacto" },
];
const logoImg = "assets/img/CONATUMEX (Chico).webp"
---

<header class="main-header">
  <div class="container">
    <a href="/" class="logo">
      <img
        src={logoImg}
        alt="Logo Conatumex"
        class="logo-img"
      />
    </a>
    <nav class="nav" id="nav">
      <ul class="nav-list">
        {
          links.map((link) => (
            <li>
              <a href={link.url} class="nav-link">
                {link.name}
              </a>
            </li>
          ))
        }
      </ul>
    </nav>
    <button class="menu-toggle" id="menu-toggle">
      <span class="menu-bar-1"></span>
      <span class="menu-bar-2"></span>
      <span class="menu-bar-3"></span>
    </button>
  </div>
</header>

<style>
  .main-header {
    background-color: #e4f5ebb4;
    color: var(--text-white);
    padding: 20px 0;
    position: fixed;
    width: 100%;
    top: 0;
    z-index: 1000;
  }
  .main-header .container {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .logo-img {
    width: 70px;
  }

  .nav-list {
    list-style: none;
    display: flex;
    gap: 20px;
  }
  .nav-link {
    color: var(--title);
    font-weight: bold;
    text-decoration: none;
    position: relative;
    transition: color 0.3s ease;
  }

  .nav-link::after {
    content: "";
    position: absolute;
    bottom: -5px;
    left: 0;
    width: 0;
    height: 2px;
    background-color: var(--pistachio);
    transition: width 0.3s ease;
  }

  .nav-link:hover {
    color: var(--pistachio);
  }
  .nav-link:hover::after {
    width: 100%;
  }

  .menu-toggle {
    display: none;
    flex-direction: column;
    justify-content: space-between;
    width: 30px;
    height: 20px;
    background: transparent;
    border: none;
    cursor: pointer;
  }
  .menu-toggle span {
    display: block;
    width: 100%;
    height: 2px;
    background-color: var(--title);
    transition: transform 0.3s;
  }

      /* Estilos para la animaci칩n de la X */
    .menu-toggle.active .menu-bar-1 {
      transform: translateY(9px) rotate(45deg);
    }
    .menu-toggle.active .menu-bar-2 {
      opacity: 0;
    }
    .menu-toggle.active .menu-bar-3 {
      transform: translateY(-9px) rotate(-45deg);
    }


  @media (max-width: 768px) {
    .nav {
      display: none;
      width: 100%;
      text-align: center;
      background-color: var(--background);
      position: absolute;
      top: 100%;
      left: 0;
      padding: 20px 0;
    }
    .nav.active {
      display: block;
    }
    .nav-list {
      flex-direction: column;
      gap: 10px;
    }
    .menu-toggle {
      display: flex;
    }
    .logo-img {
      width: 50px;
    }
  }
</style>

<script>
  const setupMenu = () => {
    const menuToggle = document.getElementById("menu-toggle");
    const nav = document.getElementById("nav");
    

    if (menuToggle && nav) {
      menuToggle.addEventListener("click", () => {
        nav.classList.toggle("active");
        menuToggle.classList.toggle("active");
      });

      const navLinks = nav.querySelectorAll(".nav-link");
      navLinks.forEach((link) => {
        link.addEventListener("click", () => {
          if (nav.classList.contains("active")) {
            nav.classList.remove("active");
          }
        });
      });
    }
  };

  // 1. Ejecutar al cargar la p치gina por primera vez.
  document.addEventListener("DOMContentLoaded", setupMenu);

  // 2. Ejecutar cada vez que Astro cambia de p치gina (transici칩n de vista).
  document.addEventListener("astro:after-swap", setupMenu);
</script>
